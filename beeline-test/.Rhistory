install.packages("KernSmooth")
install.packages("KernSmooth")
library("KernSmooth", lib.loc="~/R/win-library/3.1")
clear
exit
getwd()
m <- 1:10
m
dim<-c(2,5)
dim(m) <-c(2,5)
m
m1<- matrix(nrow = 2, ncol = 3)
m1
x<-1:3
y<-10:12
cbind(x,y)
mc <- cbind(x,y)
mc
f<-c("high"=1, "low"=0)
f
f["high"]
fr <- frame("yes", "no", "no", "yes", "yes")
fr <- frame(c("yes", "no", "no", "yes", "yes"))
mas <- c("yes", "no", "no", "yes", "yes")
mas
frame(mas)
fr <- factor(c("yes", "no", "no", "yes", "yes"))
fr
fr
df <- data.frame(foo=1:4, bar=c(T,T,F,F))
df
attributes(df)
y <- data.frame(a=1, b="a")
View(y)
View(y)
y
dput(y)
getwd()
setwd("H:\git-repos\dss-repo\")
setwd("H:/git-repos/dss-repo")
getwd()
x <- 4L
class(x)
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x
x <- c(1,3, 5)
y <- c(3, 2, 10),
y <- c(3, 2, 10)
cbind(x,y)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x
y
x +y
x = c(1,1,1,1,1,1)
x +y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x > 10] <- 4
x
data <- read.csv("hw1_data.csv")
data
data,head
data.head
head(data)
head(data, 10)
tail(data, 10)
data[1:2]
head(data, 2)
data.nrows
data[1]
tail(data, 2)
data[,47]
data[, 47]
data[47, ]
data[1:3, ]
data[1]
is.na(data[1])
sina <- is.na(data[1])
isna <- is.na(data[1])
length(isna)
length(isna[isna ==TRUE ])
length(isna[isna !=TRUE ])
x[NA]
x
x
data
data[na]
data[NA]
data[1]
osone <- data[1]
good.ozone <- ozone[!is.na(ozone)]
good.ozone <- osone[!is.na(osone)]
good.ozone
osone
length(good.ozone)
length(osone) - length(good.ozone)
length(osone[1]) - length(good.ozone)
length(osone[1])
osone
mean(good.ozone)
!is.na(ozone)
!is.na(osone)
mean(good.ozone)
mean(osone)
data
data[data[1]>31]
data[data[1]>31, data[4]>90 ]
head(data)
subset(data, Ozone==41)
subset(data, ozone==41)
subset(data, Ozone==12)
subset(data, Ozone==12 & Temp == 73)
subset(data, Ozone==12 & Temp == 73, select=Solar.R)
subset(data, Ozone>31 & Temp > 90, select=Solar.R)
subset(data, Ozone>31 & Temp > 90)
subset(data, Ozone>31 & Temp > 90, select=Solar.R)
mean(subset(data, Ozone>31 & Temp > 90, select=Solar.R))
subset(data, Ozone>31 & Temp > 90, select=Solar.R)[1]
subset(data, Ozone>31 & Temp > 90, select=Solar.R)[[1]]
mean(subset(data, Ozone>31 & Temp > 90, select=Solar.R)[[1]])
subset(data, Ozone>31 & Temp > 90)
subset(data, Ozone>31 & Temp > 90)[2]
mean()subset(data, Ozone>31 & Temp > 90)[2]
mean(subset(data, Ozone>31 & Temp > 90)[2])
mean(subset(data, Ozone>31 & Temp > 90)[[2]])
mean(subset(data, Month==6, select=Temp)[[1]])
subset(data, Month==6, select=Temp)[[1]]
subset(data, Month==6, select=Temp)
subset(data, Month==5, select=Osone)
subset(data, Month==5, select=Ozone)
subset(data, Month==5, select=Ozone)[[1]]
max(subset(data, Month==5, select=Ozone)[[1]])
subset(data, Month==5)
subset(data, Month==5, select=Ozone)[[1]]
ozone5 <- subset(data, Month==5, select=Ozone)[[1]]
ozone5
ozone5.good <- ozone5[!is.na(ozone5)]
ozone5.good
mean(ozone5.good)
max(ozone5.good)
names(data)
data[2]
data[2,]
data[1:2,]
data[1:2]
nrow(data)
data[1:2, ]
data[47]
data[1, 47]
data
data[47, 1]
data[47, 1:2]
complete.cases(data)
data[1>30]
data[data[1]>30]
data[data[1]=41]
data[data[1]==41]
data[data[1]==41, ]
data[data[1]==41 & data[4]==67, ]
data[data[1]>31 & data[4]>90, ]
complete.cases(data[data[1]>31 & data[4]>90, ])
data[complete.cases(data[data[1]>31 & data[4]>90, ])]
data[complete.cases(data[data[1]>31 & data[4]>90, ]), ]
data[data[1]>31 & data[4]>90, ]
subset(data, Ozone>31 & Temp > 90, select=Solar.R)
subset(data, Ozone>31 & Temp > 90)
data[data[1]>31 & data[4]>90, ][2,]
data[data[1]>31 & data[4]>90, ][,2]
mean(data[data[1]>31 & data[4]>90, ][,2])
rsolar <- data[data[1]>31 & data[4]>90, ][,2]
rsolar.good <- rsolar[!isna(rsolar)]
rsolar.good <- rsolar[!is.na(rsolar)]
rsolar.good
mean(rsolar.good)
install.packages("swirl")
library("swirl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
swirl()
swirl()
load("swirl")
library("swirl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
swirl()
url()
url(open = "http://google/com")
url(open = "http://google/com", description = "sdfs")
url(open = "http://google/com", description = "http")
url(open = "http://google.com", description = "http")
installed.packages("xlsx")
installed.packages("xlsx")
installed.packages("xlsx")
rdata <- read.table("/home/medved/tmp/UPE/data/total_router_time_01.log", header = F, sep = " ")
View(rdata)
mean(rdata$V2)
summary(rdata$V2)
rdata$V2[-1]
mean(rdata$V2, na.rm = T)
tail(rdata)
getwd()
pdbData <- read.table("/home/medved/tmp/UPE/data/permission_stat_2015-05-28.log", sep = " ")
View(pdbData)
summary(pdbData)
library(swirl)
swirl()
install_from_swirl("Regression_Models")
install_from_swirl("Regression_Models")
install_from_swirl("Regression_Models")
install_from_swirl("Statistical_Inference")
install_from_swirl("Statistical_Inference")
install.packages("ggplot2")
install_from_swirl(Statistical_Inference)
install_from_swirl("Statistical_Inference")
install_from_swirl("Statistical_Inference")
library(swirl)
install_from_swirl("Statistical_Inference")
install.packages("RCurl")
p <- c(.1, .2, .3, .4)
p
x<- 2:5
x
m <- sum(p*x)
m
m2 <- sum(p*x^2)
m2
m2 - m
m2 - m^2
var <- sum(p*x^2)-sum(p*x)^2
var
t.test?
sdf
?t.test
library(swirl)
swirl
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slopw <- fit$coef[2]
ols.slope <- fit$coef[2]
hrs-lhs
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(varChild)
est
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, sum(varRst))
all.equal(varChild, sum(varRes))
all.equal(varChild, varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
setwd("~/workspace/git-repo/dss-repo/beeline-test")
source("beeline_solution.R")
getRawData()
source("beeline_solution.R")
getRawData()
source("beeline_solution.R")
getRawData()
train <- read.csv("unpacked/train.csv")
View(train)
summary
summary(train)
str(train)
library(caret)
install.packages("caret")
modelFit <- train(y~., data=train, method="glm")
library(caret)
install.packages("caret")
install.packages("caret")
install.packages('car')
sessionInfo()
install.packages("caret")
