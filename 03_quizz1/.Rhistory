install.packages("KernSmooth")
install.packages("KernSmooth")
library("KernSmooth", lib.loc="~/R/win-library/3.1")
clear
exit
getwd()
x
x <- list(1, "a", TRUE, 1+4i)
x
x <- list(1,2, "a", TRUE, 1+4i)
x
x <- list(3:1,2, "a", TRUE, 1+4i)
x
x <- list("f"=3:1,2, "a", TRUE, 1+4i)
x
x[f]
x["f"]
x[2]
m <- matrix(2,3)
m
attributes(m)
m <- matrix(nrow=2, ncol=3)
m
m <- matrix(nrow=2, ncol=3, 2)
m
m <- matrix(nrow=2, ncol=3, 2, 3)
m
m <- matrix(nrow=2, ncol=3)
attribuytes(m)
attributes(m)
dim(m)
dim(m,1)
dim(m)
f(x)
x
x["f"]
attributes(m)
m["dim"]
m <- matrix(3, nrow=2, ncol=3)
m
m <- matrix(3:10, nrow=2, ncol=3)
m
m <- matrix(-3:10, nrow=2, ncol=3)
m
getwd()
q()
setwd("H:/git-repos/dss-repo")
mkdir("c3_quizz1")
dir.create("c3_quizz1")
setwd("H:/git-repos/dss-repo/c3_quizz1")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "data.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "data.csv")
dateDownloaded <- date()
dateDownloaded
data <- read.csv("data.csv")
View(data)
View(data)
data$VAL
data[data$VAL == 24]
data[data$VAL == 24,]
d <- data[data$VAL == 24,]
View(d)
dc <- d[complete.cases(d$VAL),]
View(dc)
dc$VAL
dval <- data.frame(dc$SERIALNO, DC$VAL)
dval <- data.frame(dc$SERIALNO, dc$VAL)
View(dval)
dval <- data.frame(dc$SERIALNO, dc$VAL, dc$BUS)
View(dval)
dval <- data.frame(dc$SERIALNO, dc$VAL, dc$BUS, dc$FBUSP)
View(dval)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "data2.xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
xdat <- read.xlsx("data2.xlsx")
dat <- read.xlsx("data2.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
dat <- read.xlsx("data2.xlsx", sheetIndex = 1)
dat <- read.xlsx2("data2.xlsx", sheetIndex = 1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "data2.xlsx", mode="wb")
dat <- read.xlsx2("data2.xlsx", sheetIndex = 1)
View(dat)
dat <- read.xlsx("data2.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
View(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "data2.xlsx", mode="wb")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "data3.xml")
library(XML)
install.packages("XML")
library(XML)
xm <- xmlTreeParse("data3.xml")
?xmlTreeParse
xmlRoot(xm)
xm
[[1]]
xm[[1]]
root <- xmlRoot(xm)
root[[1]]
root[[1]][[1]]
root[1][1]
root[1]
xpathSApply(root, "//zipcode", xmlValue)
xpathApply(root, "//zipcode", xmlValue)
xpathApply(root, "//zipcode")
xpathSApply(root, "//zipcode")
xpathApply(root, "//zipcode",xmlValue)
xpathApply(root, "//zipcode")
root[[1]][[1]]
root[[1]][[1]][[2]]
xmlValue(root[[1]][[1]][[2]])
?xpathApply
xm[[2]]
xpathSApply(xm, "//zipcode")
xpathSApply(xm, "//zipcode", xmlValue)
xpathSApply(root, "//zipcode", xmlValue)
xpathApply(root, "//zipcode", xmlValue)
xpathSApply(root, "//zipcode", xmlValue, )
?xmlValue
xpathSApply(root, "//zipcode", xmlValue, recursive=FALSE)
xpathSApply(root, "//zipcode")
xpathApply(root, "//zipcode", xmlValue, recursive=FALSE)
?xpathApply
xpathApply(root, "//zipcode/text()", xmlValue, recursive=FALSE)
xpathApply(root, "//zipcode/text()")
xpathSApply(root, "//zipcode/text()")
xm2 <- xmlTreeParse("data3.xml", useInternalNodes = TRUE)
root2 <- xmlRoot(xm2)
xm2 <- xmlTreeParse("data3.xml", useInternalNodes = TRUE)
xm2 <- xmlTreeParse("data3.xml", useInternalNodes = FALSE)
?xmlTreeParse
names(root)
names(xm)
length(root)
length(root[[1]])
root3 <- xmlRoot(xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternalNodes = TRUE))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
root3 <- xmlRoot(xmlTreeParse(url, useInternalNodes = TRUE))
root3 <- xmlRoot(xmlTreeParse(url))
root3 <- xmlRoot(xmlParse("data3.xml", useInternalNodes = TRUE))
root3 <- xmlRoot(xmlParse("data3.xml"))
xm3 <- xmlParse("data3.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "data3.xml", mode="wb")
xm2 <- xmlTreeParse("data3.xml", useInternalNodes = FALSE)
xm2 <- xmlTreeParse("data3.xml", useInternalNodes = TRUE)
xm2 <- xmlTreeParse("data3.xml", useInternalNodes = FALSE)
root2 <- xmlRoot(xm2)
xpathApply(root2, "//zipcode", xmlValue, recursive=FALSE)
xpathApply(root2, "//zipcode", xmlValue recursive=FALSE)
xpathApply(root2, "//zipcode", xmlValue, recursive=TRUE)
?saveXML
xm2 <- xmlTreeParse("data3.xml", useInternal = FALSE)
names(xm2)
names(xm)
root2 <- xmlRoot(xm2)
xm2 <- xmlTreeParse("data3.xml", useInternal = TRUE)
xm2 <- xmlTreeParse("data3.xml", asText = TRUE)
xm2 <- xmlTreeParse("data3.xml", asText = FALSE)
root2 <- xmlRoot(xm2)
xpathApply(root2, "//zipcode", xmlValue, recursive=TRUE)
length(root2)
root22< xmlRoot(root2)
root22 <- xmlRoot(root2)
row <- root2[[1]]
row
xpathApply(row, "//zipcode", xmlValue, recursive=TRUE)
xpathApply(row, "//zipcode", xmlValue, recursive=FALSE)
xpathApply(row, "//zipcode", xmlValue)
xpathSApply(row, "//zipcode", xmlValue)
xpathApply(row, "//zipcode")
xpathSApply(row, "//zipcode", xmlValue, useInternalNodes = TRUE)
xpathSApply(row, "//zipcode", xmlValue, recursive = FALSE)
?getNodeSet
getNodeSet(row, "//zipcode")
xmlValue(getNodeSet(row, "//zipcode"))
getNodeSet(row, "//zipcode", fun = xmlValue)
getNodeSet(row, "//zipcode", fun = xmlValue)
getNodeSet(row, "//zipcode/text()", fun = xmlValue)
getNodeSet(row, "//zipcode/text()")
xpathApply(row, "//zipcode/text()")
xpathApply(row, "//zipcode/text()", {print})
xpathApply(row, "//zipcode/text()", {z: print(z)})
xpathApply(row, "//zipcode/text()", (z){print(z)})
xpathApply(row, "//zipcode/text()", (z)={print(z)})
xpathApply(row, "//zipcode/text()", {print(z)})
xm2 <- xmlTreeParse("data3.xml", useInternalNodes = TRUE)
xm2
root2 <- xmlRoot(xm2)
root
root2
xpathSApply(root2, "//zipcode", xmlValue)
zips <- xpathSApply(root2, "//zipcode", xmlValue)
zips == 21231
zips[zips == 21231]
tz <- zips[zips == 21231]
length(tz)
?xmlTreeParse
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", data5.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "data5.csv")
library(data.table)
install.packages("data.table")
library(data.table)
DT <- fread("data5.csv")
View(DT)
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX)
)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
tables()
swirl
swirl()
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6 <7
10 <= 10
5 != 7
!(5 ==7)
F & F
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
intx[which(ints>7)]
ints[which(ints>7)]
which(ints>7)
any(unts < 0)
any(ints < 0)
all(ints > 0)
